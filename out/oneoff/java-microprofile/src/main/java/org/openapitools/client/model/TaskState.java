/**
 * Airflow API (Stable)
 * Apache Airflow management API.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: dev@airflow.apache.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.openapitools.client.model;



/**
 * Gets or Sets TaskState
 */
public enum TaskState {
  
  SUCCCESS("succcess"),
  
  RUNNING("running"),
  
  FAILED("failed"),
  
  UPSTREAM_FAILED("upstream_failed"),
  
  SKIPPED("skipped"),
  
  UP_FOR_RETRY("up_for_retry"),
  
  UP_FOR_RESCHEDULE("up_for_reschedule"),
  
  QUEUED("queued"),
  
  NONE("none"),
  
  SCHEDULED("scheduled");

  private String value;

  TaskState(String value) {
    this.value = value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static TaskState fromValue(String text) {
    for (TaskState b : TaskState.values()) {
      if (String.valueOf(b.value).equals(text)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + text + "'");
  }
  
}

