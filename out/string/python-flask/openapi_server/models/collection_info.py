# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class CollectionInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, total_entries=None):  # noqa: E501
        """CollectionInfo - a model defined in OpenAPI

        :param total_entries: The total_entries of this CollectionInfo.  # noqa: E501
        :type total_entries: int
        """
        self.openapi_types = {
            'total_entries': int
        }

        self.attribute_map = {
            'total_entries': 'total_entries'
        }

        self._total_entries = total_entries

    @classmethod
    def from_dict(cls, dikt) -> 'CollectionInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CollectionInfo of this CollectionInfo.  # noqa: E501
        :rtype: CollectionInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def total_entries(self):
        """Gets the total_entries of this CollectionInfo.


        :return: The total_entries of this CollectionInfo.
        :rtype: int
        """
        return self._total_entries

    @total_entries.setter
    def total_entries(self, total_entries):
        """Sets the total_entries of this CollectionInfo.


        :param total_entries: The total_entries of this CollectionInfo.
        :type total_entries: int
        """

        self._total_entries = total_entries
