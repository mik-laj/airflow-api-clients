/**
 * Airflow API (Stable)
 * Apache Airflow management API.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: dev@airflow.apache.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.openapitools.client.model;

import java.util.Date;
import org.openapitools.client.model.DagState;

import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.json.bind.annotation.JsonbProperty;

public class DAGRun  {
  
 /**
   * Run ID. The value of this field can be set only when creating the object. If you try to modify the field of an existing object, the request fails with an BAD_REQUEST error. If not provided, a value will be generated based on execution_date. If the specified dag_run_id is in use, the creation request fails with an ALREADY_EXISTS error. This together with DAG_ID are a unique key. 
  **/
  private String dagRunId;

  private String dagId;

 /**
   * The execution date. This is the time when the DAG run should be started according to the DAG definition. The value of this field can be set only when creating the object. If you try to modify the field of an existing object, the request fails with an BAD_REQUEST error. This together with DAG_ID are a unique key. 
  **/
  private Date executionDate;

 /**
   * The start time. The time when DAG Run was actually created.. 
  **/
  private Date startDate;

  private Date endDate;

  private DagState state;

  private Boolean externalTrigger = true;

 /**
   * JSON object describing additional configuration parameters. The value of this field can be set only when creating the object. If you try to modify the field of an existing object, the request fails with an BAD_REQUEST error. 
  **/
  private String conf;
  
 /**
   * Run ID. The value of this field can be set only when creating the object. If you try to modify the field of an existing object, the request fails with an BAD_REQUEST error. If not provided, a value will be generated based on execution_date. If the specified dag_run_id is in use, the creation request fails with an ALREADY_EXISTS error. This together with DAG_ID are a unique key. 
   * @return dagRunId
  **/
  @JsonbProperty("dag_run_id")
  public String getDagRunId() {
    return dagRunId;
  }

  /**
    * Set dagRunId
  **/
  public void setDagRunId(String dagRunId) {
    this.dagRunId = dagRunId;
  }

  public DAGRun dagRunId(String dagRunId) {
    this.dagRunId = dagRunId;
    return this;
  }

 /**
   * Get dagId
   * @return dagId
  **/
  @JsonbProperty("dag_id")
  public String getDagId() {
    return dagId;
  }


 /**
   * The execution date. This is the time when the DAG run should be started according to the DAG definition. The value of this field can be set only when creating the object. If you try to modify the field of an existing object, the request fails with an BAD_REQUEST error. This together with DAG_ID are a unique key. 
   * @return executionDate
  **/
  @JsonbProperty("execution_date")
  public Date getExecutionDate() {
    return executionDate;
  }

  /**
    * Set executionDate
  **/
  public void setExecutionDate(Date executionDate) {
    this.executionDate = executionDate;
  }

  public DAGRun executionDate(Date executionDate) {
    this.executionDate = executionDate;
    return this;
  }

 /**
   * The start time. The time when DAG Run was actually created.. 
   * @return startDate
  **/
  @JsonbProperty("start_date")
  public Date getStartDate() {
    return startDate;
  }


 /**
   * Get endDate
   * @return endDate
  **/
  @JsonbProperty("end_date")
  public Date getEndDate() {
    return endDate;
  }


 /**
   * Get state
   * @return state
  **/
  @JsonbProperty("state")
  public DagState getState() {
    return state;
  }

  /**
    * Set state
  **/
  public void setState(DagState state) {
    this.state = state;
  }

  public DAGRun state(DagState state) {
    this.state = state;
    return this;
  }

 /**
   * Get externalTrigger
   * @return externalTrigger
  **/
  @JsonbProperty("external_trigger")
  public Boolean getExternalTrigger() {
    return externalTrigger;
  }


 /**
   * JSON object describing additional configuration parameters. The value of this field can be set only when creating the object. If you try to modify the field of an existing object, the request fails with an BAD_REQUEST error. 
   * @return conf
  **/
  @JsonbProperty("conf")
  public String getConf() {
    return conf;
  }

  /**
    * Set conf
  **/
  public void setConf(String conf) {
    this.conf = conf;
  }

  public DAGRun conf(String conf) {
    this.conf = conf;
    return this;
  }


  /**
    * Create a string representation of this pojo.
  **/
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DAGRun {\n");
    
    sb.append("    dagRunId: ").append(toIndentedString(dagRunId)).append("\n");
    sb.append("    dagId: ").append(toIndentedString(dagId)).append("\n");
    sb.append("    executionDate: ").append(toIndentedString(executionDate)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    externalTrigger: ").append(toIndentedString(externalTrigger)).append("\n");
    sb.append("    conf: ").append(toIndentedString(conf)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private static String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

