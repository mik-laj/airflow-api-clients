# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from app.openapi_server.models.base_model_ import Model
from openapi_server import util


class ImportError(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, import_error_id: int=None, timestamp: str=None, filename: str=None, stack_trace: str=None):  # noqa: E501
        """ImportError - a model defined in Swagger

        :param import_error_id: The import_error_id of this ImportError.  # noqa: E501
        :type import_error_id: int
        :param timestamp: The timestamp of this ImportError.  # noqa: E501
        :type timestamp: str
        :param filename: The filename of this ImportError.  # noqa: E501
        :type filename: str
        :param stack_trace: The stack_trace of this ImportError.  # noqa: E501
        :type stack_trace: str
        """
        self.swagger_types = {
            'import_error_id': int,
            'timestamp': str,
            'filename': str,
            'stack_trace': str
        }

        self.attribute_map = {
            'import_error_id': 'import_error_id',
            'timestamp': 'timestamp',
            'filename': 'filename',
            'stack_trace': 'stack_trace'
        }

        self._import_error_id = import_error_id
        self._timestamp = timestamp
        self._filename = filename
        self._stack_trace = stack_trace

    @classmethod
    def from_dict(cls, dikt) -> 'ImportError':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ImportError of this ImportError.  # noqa: E501
        :rtype: ImportError
        """
        return util.deserialize_model(dikt, cls)

    @property
    def import_error_id(self) -> int:
        """Gets the import_error_id of this ImportError.


        :return: The import_error_id of this ImportError.
        :rtype: int
        """
        return self._import_error_id

    @import_error_id.setter
    def import_error_id(self, import_error_id: int):
        """Sets the import_error_id of this ImportError.


        :param import_error_id: The import_error_id of this ImportError.
        :type import_error_id: int
        """

        self._import_error_id = import_error_id

    @property
    def timestamp(self) -> str:
        """Gets the timestamp of this ImportError.


        :return: The timestamp of this ImportError.
        :rtype: str
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp: str):
        """Sets the timestamp of this ImportError.


        :param timestamp: The timestamp of this ImportError.
        :type timestamp: str
        """

        self._timestamp = timestamp

    @property
    def filename(self) -> str:
        """Gets the filename of this ImportError.


        :return: The filename of this ImportError.
        :rtype: str
        """
        return self._filename

    @filename.setter
    def filename(self, filename: str):
        """Sets the filename of this ImportError.


        :param filename: The filename of this ImportError.
        :type filename: str
        """

        self._filename = filename

    @property
    def stack_trace(self) -> str:
        """Gets the stack_trace of this ImportError.


        :return: The stack_trace of this ImportError.
        :rtype: str
        """
        return self._stack_trace

    @stack_trace.setter
    def stack_trace(self, stack_trace: str):
        """Sets the stack_trace of this ImportError.


        :param stack_trace: The stack_trace of this ImportError.
        :type stack_trace: str
        """

        self._stack_trace = stack_trace
