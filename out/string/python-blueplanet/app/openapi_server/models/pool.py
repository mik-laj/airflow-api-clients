# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from app.openapi_server.models.base_model_ import Model
from openapi_server import util


class Pool(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, slots: int=None, occupied_slots: int=None, used_slots: int=None, queued_slots: int=None, open_slots: int=None):  # noqa: E501
        """Pool - a model defined in Swagger

        :param name: The name of this Pool.  # noqa: E501
        :type name: str
        :param slots: The slots of this Pool.  # noqa: E501
        :type slots: int
        :param occupied_slots: The occupied_slots of this Pool.  # noqa: E501
        :type occupied_slots: int
        :param used_slots: The used_slots of this Pool.  # noqa: E501
        :type used_slots: int
        :param queued_slots: The queued_slots of this Pool.  # noqa: E501
        :type queued_slots: int
        :param open_slots: The open_slots of this Pool.  # noqa: E501
        :type open_slots: int
        """
        self.swagger_types = {
            'name': str,
            'slots': int,
            'occupied_slots': int,
            'used_slots': int,
            'queued_slots': int,
            'open_slots': int
        }

        self.attribute_map = {
            'name': 'name',
            'slots': 'slots',
            'occupied_slots': 'occupied_slots',
            'used_slots': 'used_slots',
            'queued_slots': 'queued_slots',
            'open_slots': 'open_slots'
        }

        self._name = name
        self._slots = slots
        self._occupied_slots = occupied_slots
        self._used_slots = used_slots
        self._queued_slots = queued_slots
        self._open_slots = open_slots

    @classmethod
    def from_dict(cls, dikt) -> 'Pool':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Pool of this Pool.  # noqa: E501
        :rtype: Pool
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self) -> str:
        """Gets the name of this Pool.


        :return: The name of this Pool.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this Pool.


        :param name: The name of this Pool.
        :type name: str
        """

        self._name = name

    @property
    def slots(self) -> int:
        """Gets the slots of this Pool.


        :return: The slots of this Pool.
        :rtype: int
        """
        return self._slots

    @slots.setter
    def slots(self, slots: int):
        """Sets the slots of this Pool.


        :param slots: The slots of this Pool.
        :type slots: int
        """

        self._slots = slots

    @property
    def occupied_slots(self) -> int:
        """Gets the occupied_slots of this Pool.


        :return: The occupied_slots of this Pool.
        :rtype: int
        """
        return self._occupied_slots

    @occupied_slots.setter
    def occupied_slots(self, occupied_slots: int):
        """Sets the occupied_slots of this Pool.


        :param occupied_slots: The occupied_slots of this Pool.
        :type occupied_slots: int
        """

        self._occupied_slots = occupied_slots

    @property
    def used_slots(self) -> int:
        """Gets the used_slots of this Pool.


        :return: The used_slots of this Pool.
        :rtype: int
        """
        return self._used_slots

    @used_slots.setter
    def used_slots(self, used_slots: int):
        """Sets the used_slots of this Pool.


        :param used_slots: The used_slots of this Pool.
        :type used_slots: int
        """

        self._used_slots = used_slots

    @property
    def queued_slots(self) -> int:
        """Gets the queued_slots of this Pool.


        :return: The queued_slots of this Pool.
        :rtype: int
        """
        return self._queued_slots

    @queued_slots.setter
    def queued_slots(self, queued_slots: int):
        """Sets the queued_slots of this Pool.


        :param queued_slots: The queued_slots of this Pool.
        :type queued_slots: int
        """

        self._queued_slots = queued_slots

    @property
    def open_slots(self) -> int:
        """Gets the open_slots of this Pool.


        :return: The open_slots of this Pool.
        :rtype: int
        """
        return self._open_slots

    @open_slots.setter
    def open_slots(self, open_slots: int):
        """Sets the open_slots of this Pool.


        :param open_slots: The open_slots of this Pool.
        :type open_slots: int
        """

        self._open_slots = open_slots
